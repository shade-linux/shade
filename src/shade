#!/usr/bin/env bash

export normal=$'\e[0m' # normal
export bold=$(tput bold)

# Normal colours
export black=$(tput setaf 0) # black
export red=$(tput setaf 1) # red
export green=$(tput setaf 2) # green
export yellow=$(tput setaf 3) # yellow
export blue=$(tput setaf 4) # blue
export magenta=$(tput setaf 5) # magenta
export cyan=$(tput setaf 6) # cyan
export white=$(tput setaf 7) # white

# Bold colours
export bold_black="$bold$black" # bold black
export bold_red="$bold$red" # bold red
export bold_green="$bold$green" # bold green
export bold_yellow="$bold$yellow" # bold yellow
export bold_blue="$bold$blue" # bold blue
export bold_magenta="$bold$magenta" # bold magenta
export bold_cyan="$bold$cyan" # bold cyan
export bold_white="$bold$white" # bold white

function success() {
    echo "${bold_green}${1}${normal}"
}

function error() {
    echo "${bold_red}${1}${normal}"
}

function help() {
    cat <<EOF
Usage: shade [OPTION] [...]

Options:
    -h, --help    Show this text
EOF
    
}

function setup() {
    if [[ $EUID -ne 0 ]]; then
        error "Shade must be run as a root user"
        exit 1
    fi
    success "Beginning setup"
    rm -r /usr/local/shade/cache/ > /dev/null 2>&1
    mkdir /usr/local/shade/ > /dev/null 2>&1
    mkdir /usr/local/shade/log/ > /dev/null 2>&1
    mkdir /usr/local/shade/cache/ > /dev/null 2>&1
    git clone https://github.com/shade-linux/buildscripts/ /usr/local/shade/cache/
    success "Setup done!"
}

function install() {
    if [[ $EUID -ne 0 ]]; then
        error "Shade must be run as a root user"
        exit 1
    fi
    for pack in ${@:2:9999}; do
        read -r -p "${bold_green}Open ${pack} buildscript? [Y/n] ${normal}" response
        response=${response,,}
        if [[ $response =~ ^(yes|y| ) ]] || [[ -z $response ]]; then
            if command -v bat &> /dev/null
            then
                bat -l sh --decorations never /usr/local/shade/cache/packages/${pack}/package 2>/dev/null || error "${2} buildscript not found!"
            else
                less /usr/local/shade/cache/packages/${pack}/package || error "${2} buildscript not found!"
            fi
        fi
        success "Installing ${pack}"
        find /usr/local -name "*" > /usr/local/shade/cache/packages/${pack}/pre-install
        if ! bash /usr/local/shade/cache/packages/${pack}/package 2>/dev/null; then
            error "${pack} failed to install!"
        else
            success "${pack} installed!"
            find /usr/local -name "*" > /usr/local/shade/cache/packages/${pack}/post-install
        fi
    done
}

function remove() {
    if [[ $EUID -ne 0 ]]; then
        error "Shade must be run as a root user"
        exit 1
    fi
    for pack in ${@:2:9999}; do
        error "WARNING: THIS FEATURE IS EXPERIMENTAL. PLEASE MAKE A BACKUP OF /usr/local/"
        read -r -p "${bold_green}Uninstall ${pack}? [Y/n] ${normal}" response
        response=${response,,}
        if [[ $response =~ ^(yes|y| ) ]] || [[ -z $response ]]; then
            diff /usr/local/shade/cache/packages/${pack}/pre-install /usr/local/shade/cache/packages/${pack}/post-install | tail -n +2 | cut -c 3- | xargs rm -rf
            success "${pack} uninstalled!"
        fi
    done
}

function query() {
    cat /usr/local/shade/cache/packages/*/*${2,,}*/meta 2>/dev/null || error "${2} not found!"
}

function update() {
    if [[ $EUID -ne 0 ]]; then
        error "Shade must be run as a root user"
        exit 1
    fi
    success "Beginning update..."
    cd /usr/local/shade/cache/
    if ! git pull; then
        error "Update failed!"
    else
        success "Update completed!"
    fi
}

case "$1" in

    -h) help ;;
    --help) help ;;
    
    -s) setup ;;
    --setup) setup ;;

    -i) install $@ ;;
    --install) install $@ ;;

    -r) remove $@ ;;
    --remove) remove $@ ;;

    -q) query $@ ;;
    --query) query $@ ;;

    -u) update ;;
    --update) update ;;

esac
